import { NextApiRequest, NextApiResponse } from "next";
import { EvalsData } from "../../src/Types";

// retrieves textual evaluation data for a course page
export default function handler(
  req: NextApiRequest,
  res: NextApiResponse<EvalsData[]>
) {
  const courseid = req.query.courseid as string;
  const raw = `Solid course, lots of independent learning though. The hardest parts of the course are the written exam, so if you do well on those the rest of the course should be pretty easy. All around great introduction to Java
  I advise students who take this course to attend the extra help sessions and actively watch the lectures. They greatly help in figuring out and completing the weekly assignments and give great insight into material covered on the exams.
  Definitely take it if you have any interest in tech/comp sci/anything like that. I did this as a humanities student and found it very fun. Everything is pretty easy other than written exams (study for those)
  it's work but manageable, don't procrastinate on stuff, find other people to work with
  Please keep up with the work. Read/watch the lectures; find what works for you. The practice exams are useful resources for not only understanding the concepts but also for preparing for the exams. Make sure to give yourself time to try them.
  I think that keeping up with lectures and staying on top of the material is important. It is also very helpful to go to office hours and lab TAs for help when needed on the assignments.
  This course features online lectures, so you must be comfortable with that to take this course.
  Make sure to watch the videos on time - no one will be assigning these video lectures but it is imperative to stay on schedule as to not fall behind on the vital practice that's offered in assignments, labs, and precepts each week.
  I'd advise you to find a good partner early for the partner assignments and to stick with them, assuming you guys click. Also, don't be afraid to be confused and seek help.
  This is a very informative and worthwhile course. As long as you do things slightly beforehand and go to office hours when you can, it'll be easy.
  The labs are extremely helpful for preparing for the written exams.
  I would suggest that they read the textbook instead of watching those boring, long lecture videos.
  This class is a must-take in your Princeton career but you probably already know that
  The review I wish I had read: To begin, definitely take this course if you are on the fence!!! Computer science is super important in today's digital age, so make sure to squeeze in this course before you graduate! It is very time-consuming course, ESPECIALLY IF YOU HAVE NEVER CODED BEFORE. People who have coding experience will breeze through the first month or so before stuff gets hard + everyone else starts to overcome the steep learning curve of coding. This semester was lecture-lab-lecture-lab-precept, so it was quite a weekly workload. Weekly coding assignments due on SUNDAY are a huge part of your grade, so start them early (ideally Wednesday and Thursday at the latest after your lab section). You get four "late" days, so use them wisely. Half of the assignments are individual and the other half + the final project are partnered, so definitely try to take this course with a friend or latch on to an experienced coder if you're a noobie (plenty of ppl did this, don't worry). Lectures were pre-recorded and done online which provided scheduling freedom to do things other than to watch lectures during its designated time slot, but it also proved to be a breeding ground for procrastination, so be sure to stay on top of things (but you already know this). The text was comprehensive but a bit dense, so the most efficient use of time to learn the material was honestly doing the hands-on coding during labs. Lab section leaders and preceptors are a wealth of knowledge, so make it an effort to go to each of their sessions! This is where most of the learning happens. You get to drop one assignment and one lab, so plan it wisely! Always try to go for extra credit (there are leaderboard opportunities, etc.) because a +0.3 boost in the assignments grade can prove to be the difference between a B+ or an A- for instance. Finally, since you're given a week to work on assignments (they're free points to be honest, and LABTAs HELP A LOT!!!!!), the programming and written exams are made a bit tougher and serve to "curve" or bring down everyone's grade to where they should be. Thus, focus heavily on the assignments and studying for the exams. The written exams are harder than the coding exams, the former being more comprehensive. The second written exam this semester essentially served as the final exam since it covered every topic. The final project was just introduced this semester, but it was a (stressful) grade-booster tbh. Overall, the course takes up about 10-15 hours a week in total and about 20 hours a week (assignments typically take 4 to 15 hours) if you're completely new to coding, so be prepared to work. You'll develop a love-hate relationship with COS 126 if you're new to coding like me. When my friends would ask how I was doing, I would respond half-sleepingly, show them my weekly assignment, and say "BAD! But it?s been fun!"
  difficult class but worth it. assignments are fun, make sure u work with a partner thats on your level. keep up w lectures.
  DO TAKE if you are interested in COS. I didn't have any prior experience before taking this class, and after taking it I feel really confident in my abilities. It is a little challenging for beginners; yet, you learn really quickly
  Not too hard as a class, very interesting final project
  This course is amazing. If you already have coding experience this course will still be super engaging and the assignments are awesome projects to work through. If you don't have coding experience it might be a little more difficult but the course staff are super supportive and there are a million different ways for you to get the help you need with your assignments and labs.
  Stay on top of the video lectures!
  COS126 is an excellent introductory class to computer science. Programming experience is certainly not required, but if you have the opportunity to familiarize yourself with Java beforehand, particularly manipulating arrays and data types, you will feel that the first half of the class is fairly comfortable. The written exams are much more challenging than the programming exams, and will test you on theoretical concepts that you probably are not familiar with. Programming assignments are certainly manageable, make sure to find a competent partner that you collaborate well with. Expect to spend anywhere from 2-5 hours on the assignments, I averaged around 3-4. The video lectures and textbook are fairly well written, if you have to choose which to watch, my recommenadation is the video. Get Ruth Fong as a preceptor if possible, she is awesome. Esin Tureci is very nice and helpful as well.
  Watch or read all of the lectures and start the weekly assignments relatively early.
  Look over some cos projects before starting the class
  Take this course. It is super interesting and very flexible! :)
  Depending on level of exposure to computer science, this course may be an easy A or it may be highly challenging. Conceptually interesting and well worth taking. Course faculty are helpful and plenty of materials are available on the course website.Highly recommend.
  Take this class!
  Great class - just make sure to stay on top of the lectures and lab assignments which are very helpful in the long run. Find a good COS partner and don't be afraid to use office hours or ask for help; also definitely debug/test whenever you can. For the written and programming exams, do as many practice exams as you can as that is the best way to prep.
  If you have any interest in CS at all, well, this is a course you'll have to take. Thankfully, it's quite tolerable. Your experience depends a lot on (a) your ability to keep watching the lectures, and (b) the preceptor you get. If you have the opportunity to have Gianluca as your preceptor, I highly recommend him.
  I think that this course teaches a great deal of computer science material in a short period of time, and gives a thorough introduction to the field of computer science.
  Take this course.
  Really stay on top of everything, every lab/precept/assignment/lecture. It's easy to fall behind in this fast-paced class, but rewarding in the end because you learn so much.
  A classic. Though be prepared for the written exams- they'll crush you if you aren't prepared.
  Yeah, but they might struggle in the beginning if they don't have prior coding experience.
  Great course! It might be a lot if you do not have prior coding experience, but there are lots of opportunities for getting help, late days, and light testing requirements.
  If you are taking this class to learn code, either PDF it or do not take it period. If you have to take this class find someone who is good a coding and stick with them because too many people taking this class need to be in a high level.
  Watch the video lectures on 1.25 speed. Make sure you understand the labs. Get started on the weekly coding assignments early in the week.
  This class is manageable and fun if you take the time to do every assignment and reading.
  Amazing class. Challenging and fast-paced but it's everything you'd ask from a class to truly learn from. Give yourself time for assignments as they can take quite long, especially as a beginner. The bottom line? Take this class! Have John Yang as preceptor if possible too! He was awesome.
  This course covers a large amount of computer science material very quickly, but you?ll come out much more knowledgeable about both computing theory and programming. When you review course material, it?s less stressful to choose either the lecture or the assigned reading to learn from, because doing both each week uses a lot of time. Your best sources for exam review are your weekly assignments and labs.
  The course will seem manageable during the first half as the lectures, labs, and assignments line up perfectly. But be warned, this is just because you are learning the basics of coding. As someone who has never coded before, I found that even the more difficult concepts in the second half were easy to learn and implement with the materials/support they provide. But if you don't need to take the course for a grade... that second half is when you decide to PDF or not. I think that the theory portion was hard for everyone, especially because you aren't held accountable for watching those lectures until all of a sudden you have written exam during the busiest part of the semester. So, if you can, keep up with the theory lectures/labs. But take solace in the fact that you can cram all the theory lectures in 2x speed, all the theory labs, and 4 practice exams in 12 hrs spread over two or three days (that's what I did and I was fine). Also make sure you scope out a lab partner who is around your skill level and more studious than you. Not studious and you'll be scrambling every Sunday. More skilled than you and you will not be forced to learn anything. COS126 makes sure you can get an A as a beginner if you put in the hours.
  As someone with no previous coding experience, this course was really hard for me. If you are having trouble, going to preceptor office hours or Lab TAs is immensely helpful!
  Attend the labs and precepts, as doing so will definitely help with the assignments. Also, if you are struggling with assignments, you can always go to Lab TAs for help.
  The interactive labs are the most helpful part of the course since our lectures were pre-recorded online. The second half of the course is definitely more conceptually challenging, and try to find a partner soon to work on partnered coding assignments. You definitely learn a lot of programming skills and theoretical computer science.
  Definitely take this if you already know a bit of programming but aren't confident in your skills. I think it's difficult to take if you don't know programming but if you can partner with someone who has experience there is no reason not to take this class.
  This is a great course to take if you'd like a good introduction into programming. The labs are manageable, and there are programming assignments due every weekend which could be a pain. However, if you start early and get help from Lab TAs, they are definitely doable. Workload is okay, mainly made up of the programming assignments. Don't take written exams lightly ?especially the second one, which is very much theoretical concepts)... definitely keep up with lectures.
  You should definitely take this class. The weekly assignments are really enjoyable, and the class is fair in terms of grading. For the partner assignments, find someone that you will be able to work well with who is close to your level, not just a friend.
  Watch the video lectures and make sure to go to office hours/Lab TA hours! They are such a great asset to fix any bugs in your code, and doing those weekly assignments on time will go a long way in terms of succeeding in the class.
  Keep up with the lecture videos,practice coding, and take notes.
  Take this class. Super interesting. Lots of work, but definitely worth it.
  Class with best resources and everyone is super engaged
  Try to avoid taking this as an upperclassman because it can be very time consuming, especially if you don't have much (or any) experience with coding. If you know you'll need it for your major as a departmental requirement, take it as a first-year/sophomore. Also would be helpful to take this class with friends or make friends, because the second half of the semester is pretty miserable if you don't have a partner to do the assignments with.
  Anyone looking for a foundational understanding of COS as someone who is debating entering the field as a potential career should definitely take this course. Expansive range of topics. Solid foundation. As someone with a decent amount of experience before (did competitive programming), the theory content was enlightening. Overall found the class to be very chill (about 2 hours a week). Take note that if it is your first exposure to programming will definitely not be as chill (like upwards to 7 and 10), so make sure to gauge the amount of engagement and time you can give towards this course based on your background. Also, the lectures are videos and completely virtual, making watching them quite tedious. Make sure you are up up for this sort of "self-learning" when choosing.
  This is a great introductory course to computer science. It does move fast at the beginning but by the end you realize how much you have learned. Go to labs because that is where you will learn the most material and make sure to find a partner that you trust to work with on the group assignments. It is a very accessible class for people who have no cos experience as long as you are willing to go to office hours (that they have everyday!) and lab TAs for help.
  Definitely take it but be prepared to spend over 15 hours a week dedicated to this course alone.
  if you have prior experience, this course is a breeze for the most part, but don't take it for granted, because the theory part at the end could get you. if you don't have prior experience, stay on top of the lectures, and ask for help! there's so many avenues to get it. also practice - best way to learn is by doing.
  assignments were fun but the directions were bit confusing and disorganized (make sure you read through the assignment pages); really appreciated the preceptors and lab TAs; wouldn't say it's the most engaging CS course you can take
  Don't fall behind on lectures and labs.
  This class is flipped classroom. All the lectures are online, so you can watch it any time you would like to. Please study for the written tests, they can be really hard sometimes.
  This class is doable, even if you are like me and have no prior programming experience. The weekly assignments are hard and require at least 5-6 hours of work. All lectures are online on your own time and labs do not require attendance as long as you do them. Precepts are mainly just to let you ask questions. The programming exams aren't terrible; they're pretty good tests of what you've learned to do on the computer. The written exams, however, are very hard and require a ton of practice or prior knowledge to do well on. I thought the second written exam was especially hard because it had a lot of abstract topics. Either way, you shouldn't shy away from taking this class. They provide you with a lot of help and the assignments were also pretty cool.
  If you have never coded before, do not be intimidated by people with AP/ prior experience. Lab TAs can be wrong at times (they are also great though) so I would recommend preceptor office hours. The struggle is the realest but we all make it anyway and come out knowing how to somewhat code. Just keep your head up and ignore the overly-experienced people in the class who just want an easy A. For those with prior coding experience, go take cos226, this class is not for you, stop putting down beginners. I am sorry but you do not belong here. However, only take this course if you need to, if your career has nothing to do with coding and computational theory, don't do that to yourself. This is not a course you can take for fun- it's not worth it (so many hours of code await you.)
  Go to precept and complete all the labs for the second half of the year. The second written exam is tough, but it helps to have a good understanding of all the topics before having to study for them before the test.
  Take this course if you have any interest in computers because it will probably make you more interested.
  I took COS126 for fun and am now set on pursuing a COS certificate. I had no background in COS, so I spent much more time on this course than my other classes. It was totally worth it. Programming assignments are fun and empowering. You need not read the textbook; the labs and pre-recorded lectures are sufficient for learning all the material. The book site is a lifesaver. And there is SO much support ? the lab TAs and preceptors were almost always there when I needed help. I highly recommend this course but warn that it will suck up much of your time if you tend to be a bit slow with learning new STEM-y things (no shame; same here).
  This is a great introductory course! Completing the weekly assignments helps synthesize knowledge and stay on track for the midterms and finals.
  COS126 is truly one of the gems of Princeton?s course offerings. The assignments were fun, interesting, and truly interdisciplinary, covering topics from generative art & music to Hamming decoding and the infamous solar system simulation. I would recommend taking it even to those who already have programming experience, as the second half of this course builds a solid foundation for theory, data structures, and algorithms (which is not covered in a surface-level course like AP comp sci). Note that this course does have a steep learning curve for those completely new to programming, although there?s a big support system available (lab TAs, office hours, Ed, etc.).
  This course really teaches you how to code. It is A LOT of work because the assignments get progressively more time-consuming and after fall break the topic become more theoretical, which is very annoying. The program exams are good, the written ones can be tricky. The assignments can seem very long and hard, but they give you all the information you need and even some hints on steps, which is very helpful. Also, the lab TAs are very helpful even though the queue can get quite long. The final project can be a lot of work if you don't plan it.
  The hardest part of the course is probably the written exams. The assignments are easy to get help on.
  GO TO OFFICE HOURS!!!Watch ALL lecturesGo to labs, they are super helpful
  N/A
  make sure you understand the assignments as you do them because they help the most in learning the course material
  very fun and interesting. extremely recommended!!
  I would definitely recommend another student to take this course. The department provides many resources for help and the course itself is incredibly well structured.
  This class is split into 2: those that have prior cos knowledge and those that don't. The split is really apparent so ensure that you know this before taking this course.
  This class is great! The lectures are all prerecorded which is disappointing, but I came into this class with no coding experience and left proficient in Java. Kaplan is awesome. He is one of the best teachers I have had. Definitely go to his office hours if you need help. I had Charlie Smith for precept and he was great. The class is time-intensive if you haven't coded before it, but an A,A- is totally attainable if you commit to the class. I overall really enjoyed this class, would recommend it to every student regardless of major, and now plan on getting a COS certificate.
  Definitely utilize Lab TAs - so, so helpful! Don't be afraid to ask questions - everyone is super friendly. This course may sound intimidating but it's very manageable.
  Overall, a pretty solid course. It does a pretty good job at introducing computer science as a whole (both programming and more theoretical topics).
  Definitely take this class, not only is it a very interesting class but it is also structured to give you all the support and information necessary to do well on the class. LAB TAs are a great resource and don?t start assignments too late because they will get very tough especially later in the year.
  Go to Lab TAs for help with assignments!
  Attend all labs. Ask as many questions as possible. Get a tutor right away especially if you have never coded before,
  Go to labs. Not sure how many students consult the textbook/watch lecture videos. Don't be afraid to take this without any past programming experience; you won't be alone, and you will not fall behind, so long as you use the resources at your disposal (office hours, lab TA's, etc.). It is a fun course, but be prepared to put in the hours!
  It is quite a fun course but make sure that you understand the theory and that you have a good partner for your assignments.
  Great course! Fun assignments. I had some experience in C++ from high school, but I really liked the course, and it was a great way to combat the heavy reading of my other classes.A great way to advance knowledge of computer fundamentals.
  Class teaches you a ton but can be overwhelming at times.
  Don't take this unless have Cos background.
  Watch the lectures!
  As a person who never programmed before, this class is definitely doable and not too bad to learn. I feel like I learned so much, and getting an A is manageable too
  Definitely take this course! Best class at Princeton. You will learn how to code and feel super well-supported along the way. The assignments and topics are very fun to learn. Just be patient if you don't understand the concepts immediately!
  Written exams hard and final project fun
  Try to attend labs and lectures when necessary because they can be helpful for PAs and importantly the written exams.
  Watching the lectures is helpful, but taking active notes is much more helpful. Old exams are key, and office hours, labs, and precepts are great for specific questions.
  Take it!!!
  Students who have a basic background in CS (to the point they know some sorting algorithms, etc) should skip this and take COS226. Otherwise, the course offers a great foundation in CS and explains the basic concepts pretty deeply, which is great! I think this course is fairly approachable for absolutely anyone, so regardless of your major, if you want to learn some CS and you are new to it, you should definetely take this course!
  Watch lectures for help with written exams!
  Good solid class if you're motivated. If you're not it's easy to fall behind.
  Play lectures on 1.75x speed, create little quizzes for yourself on theoretical material, do the labs to reinforce your understanding! If you find yourself getting stuck on the weekly assignment, go to office hours. But really try to think it out by yourself first! You will learn a lot more that way, and coding comes naturally with practice. Before exams, review your labs and self-made quizzes (focus more on theory for written exam), then practice past exams, and you're good to go! This class isn't an easy A, but it's definitely possible to master the material, and extremely rewarding to do so. I really looked forward to the weekly assignments because they're so well-written and fun! Go to Tara Shankar's precept!!! She's amazing!!
  COS 126 provides a lot of resources to help you in the course, but you have to actively figure out which ones actually increase your understanding of the concepts and focus on making the most out of them. It may be hard to make time to do this, but trying to condense what you know about a certain concept after learning about it will likely help a lot in solidifying your knowledge (especially when it's time for the programming and written exams).For the rather time-consuming assignments, undergraduate lab TAs will have office hours during the evening, and are really helpful in answering questions about them. I would recommend starting assignments early in the week and getting help then, as the queue for help can be very long on the weekend the assignments are due. Instructor/preceptor hours are also during the week and are definitely underutilized.I would definitely recommend reviewing or learning introductory Java before you take this course; having a solid understanding of the basics will save you a lot of time learning and doing assignments.
  Easy way to fulfill QCR credit for AB majors. Interesting material and come away knowing how to code in java.
  If you put effort into understanding the class assignments and studying for the exams, you will be fine. I began weekly projects on thursday or friday each week, and I believe they were due on Sundays. If you have prior experience, this class will be more manageable/easy. Would not recommend as a fifth course at all. This class will give back what you put into it.
  This course is extremely well taught, but the second half moves extremely quickly for those who have never coded before taking the course. As someone with absolutely zero coding experience, it was frustrating to spend 8+ hours on the weekly assignments and be surrounded by people talking about how easy it was, but there are a lot of resources to help you and I learned a tremendous amount.
  pls watch lectures
  100% worth taking. It is a little time investment but you gain so much out of it. Not too stressful. Take it if you can. Probably the best structured class I have taken at Pton.
  If you?re considering doing BSE, or on the fence about whether or not you would like COS, you should take COS126. It?s a phenomenal introduction to computer science! One of my favorite parts of the course were the programming assignments, which incorporated so many cool, real-world applications of Java programming, from musical instruments to machine learning! They were challenging, but so much fun to code and marvel at the work you had done once you were finished! All the professors, preceptors, and lab instructors are always incredibly supportive and make themselves as available as they can with plenty of office hours. I knew that they really wanted to help me succeed!
  Make sure to start the programming assignments early. Do not skip a week's content (especially when you get to the theory part of the course), as it will hurt you once you start preparing for the written exams. Make sure to give yourself at least 2 weeks prior to the written exam date to go through all the written exams, as some questions can definitely be tricky. Overall, I think this is a great intro CS course and strongly recommend you to take it (moderately difficult to get an A in the class).
  This course makes it difficult (but not impossible) for beginning coders to find success. Use office hours from lab TAs and preceptors to ask questions and get help early. Start assignments early. It is a great course for seeing if you like computer science, but it is an extremely time consuming class to take.
  From a course material standpoint, the course was incredible and covered many important facets and corner-cases of computer science, which I really enjoyed. However, I think at times the course staff made this course unnecessarily stressful or difficult via either extremely long grading times or blatant errors in course material. Yet, most of these errors were resolved rather quickly, and the majority of the course staff were very cordial and understanding whenever students had questions or issues. If you have never programmed, I strongly recommend that you take this course!!
  I think it's really important to prioritize developing a conceptual understanding of the material so that you can succeed on written exams.
  Labs are the best part of this course! It is a LOT of time, but prioritize labs and video lectures OR textbook to be able to do the assignments/exams and you'll be fine.
  I decided to take this course randomly as a junior for fun, and I am thrilled that I did. It is the best course I have ever taken in my life. Every student should take it at one point during their tenure. Not only is it fun, creative, and empowering, it also fosters a foundation of understanding of the most impactful inventions in human history: computers.
  This is a great class, I really loved it! If it is your first time coding, make sure you are prepared to put in the work because it moves pretty quickly (especially the second half after midterms). If you think you might want to code, definitely take this course! You do some really cool assignments without needing to be an expert in computer science, and there are so many helpful resources if you need them.
  It's a great intro to Computer Science. But be willing to try and figure out a lot of the stuff yourself.
  Make sure to use previous exams to help you prepare. Also, the course gets more difficult as time goes on, so be prepared for that. It is a very well organized and taught course, so I really enjoyed it.
  Watch the lectures. Even if they are long, it is very much worth doing.
  It is a good course for learning how to code.
  Start your assignments early and go to Lab TAs if you are stuck.
  I came into this course with absolutely no coding experience, and really enjoyed it! The assignments could be really difficult at times, but there is a lot of support available.
  This course feels like a self study course. Lectures are pre-recorded and therefore less engaging. Labs and precepts were not required and so I did not go to them but you probably should. Cos126 will be alright (still challenging) if you know coding already but beware, still pay attention or else you will end up not doing so well on your written tests...Take the course if you wanna learn how to code (because this is the intro class) but if you have no background in coding, this might be a heavy self-studying class
  Definitely take this course. It will be somewhat difficult if you have no prior experience, but if you have any you'll love it and it won't be too hard.
  If you have never coded before and are not willing to dedicate the vast majority of your time to the course, I think it will be difficult (or at least it was for me). Eventually, I felt like the time I put into COS 126 took away from other classes relevant to my major (I took COS for a QCR). Overall, I do feel like I learned a lot, but it was a struggle.
  This course is very straightforward if you put in consistent effort! Don't let anyone scare you off of taking this great course.
  Do not fall behind
  Be cautious if this is your absolute first exposure to computer science. It will feel very overwhelming, not only because nearly everyone else in the course has programmed for fun/taken a programming course before, but also because the course is tailored to those kinds of students. It is not very beginner friendly, material-wise. That being said, there is tons of support to help you through, you simply need to seek it out at the BEGINNING, and not wait until it's too late. As soon as you feel that you may be struggling/not understanding material, tell someone!!
  NOTICE: Before starting this course, briefly review Java code (just a few hours on codecademy.com) to get used to basic syntax and style. COS 126 hits the ground running after 1-2 weeks, so having any background knowledge will prevent you from falling behind and losing all grip on reality as the workload for COS 126 piles up.- Precept is worth attending! Even if you fall behind on videos or already understand the required weekly labs, when it comes time to study for the written exam (arguably the hardest part of the course) the precept materials, worksheets, and powerpoints come in clutch.- Labs completely depend on your TA. If you get one who reviews the weekly powerpoints, offers study tips and advice, and is generally knowledgeable about COS you have a keeper!- Lectures are pre-recorded, which is so much better than in-person classes for 300+ students. However, some of the material on written tests is not covered in detail by the videos. You either have to complete all the previous tests posted or read the textbook consistently to understand those concepts.
  Very good course but be ready to spend a lot of time on this if you want to do well or do not have a solid background in coding.
  Stay on top of lecture videos and do all the assignments and labs on time. It is easy to leave assignments to the last minute and to leave lecture videos until the weekend before a test, but try not to do that,
  It is a time consuming, but interesting course.
  This is a very useful course to gain knowledge of computer programming. Make sure to stay on top of course materials.
  The course was challenging at times, but don't be afraid to ask for help. Most of the time you could find someone who could help you with your issue.
  The book has tidbits of information that you might need on exams but most of it is extraneous (although reading the later chapters on theory doesn't hurt). If they let you choose your final project do not pick a huge one and watch the time you put into the clerical stuff.
  If you've already done Java before, this will be a very easy course. The first three exams are very easy, but the last one is incredibly hard, so study for that one a lot, don't expect it to be like the rest of the exams.
  Great
  Take it! I had never coded before and was very nervous but really enjoyed it! I would say don't fall behind on the material -- I know it can be hard not to but it will really help you later. Also the COS lab TAs are INCREDIBLE
  If you are at all interested in learning the basics of coding and are willing to PDF the class, by all means go for it. You'll learn a lot and have a good time. If I had taken the class for a grade, I would have been really stressed out and not enjoyed it.
  If you don't have background in COS I think this course will take a lot of time out of your schedule so plan accordingly. Also use lab TA's; they're great!
  I believe that this course is a staple at Princeton University and that everyone could truly benefit from it. My advice to everyone is to actually complete every single lab assignment instead of the minimum needed for participation as it will truly teach you the course material. Also, to my fellow PDFers, do not think that you can put in only a little bit of work and pass. This class certainly requires full participation, studying, and learning to just pass. While you might not have to do *as much* of these, they are certainly still required.
  Make sure to do labs and past exams.
  This class will give a decent amount of work, especially if you don't having coding experience. However, it was extremely rewarding and I would recommend it to anyone interested in computer science.
  Attend all lectures, labs, and precepts.
  This class was a bit frustrating to a beginner programmer. I found the content really interesting, but the weekly partner programming assignments in the second half of the semester were too complex to reinforce the content, and thus stressful. Grading for the class however is pretty fair. The written exams are hard but are also the only thing that can really bring your grade down (as long as you complete the labs and programming assignments, you'll basically have full points in those categories). The pre-recorded lectures are unengaging and long and so most people stopped watching them by the end of the semester, so all the learning happens in lab and precept. Complete the labs when you don't finish them in class and ask every clarifying questions in precept! LabTas can be helpful to complete assignments, but go earlier in the week. There are Office Hours everyday! Try to keep up with the material, so you aren't cramming before the exams.
  Overall a good course though I wish I had not taken it my freshman fall and instead during the spring. The class does a great job of bringing students from 0 (which is what I was) to decent coders. One warning however is that everyone says the differences between you and people who have coded for years dissipate after a month? this was not my experience. The course is definitely significantly easier if you have some exposure to computer science so I would strongly recommend staying super on top of things so that you don?t fall behind. Lab TAs and OH were key! And if you could get Ruth Fong or Alan Kaplan as a preceptor you?ll be winning at life.
  really rewarding class if you have the time and community for it (if you're a non-man, take it with other non-men because otherwise, you will feel so gaslit!!!) don't be ashamed in pdfing -- this class is HARD
  I recommend not taking this course unless you're ready to let it take over your life. This course has main character energy. It thinks it's the only course on your schedule. The head professor has such an ego and it comes through in lectures. The video lectures never held my attention and were redundant, dumbed-down versions of the textbook; the booksite was the most useful resource for me.
  PLEASE TAKE THIS CLASS!!!`;

  const dummyData: EvalsData[] = raw.split("\n").map((evaluation: string) => {
    return { text: evaluation.trim() };
  });

  res.status(200).json(dummyData);
}
